# ========================================
# General configuration
# ========================================

# Puerto en el que se ejecutará la aplicación
portCore=8000
portAuth=8001
portPerso=8002


# Entorno de ejecución: development | production | test
nodeEnv=development


# ========================================
# Microservices configuration
# ========================================

# Servidores NATS para microservicios (separados por coma)
msNatsServer="nats://localhost:4222"


# ========================================
# JWT configuration
# ========================================

# Secret para firmar los tokens JWT
jwtSecret=6e2f8c7b9a4d1e5f3c0b7a2d9f8e6c1b

# Tiempo de expiración de los tokens JWT
jwtExpiresIn=2h
jwtRefreshExpiresIn=7d

# ========================================
# Database configuration
# ========================================

# Host de la base de datos
dbHost=172.31.23.42

# Puerto de la base de datos (PgBouncer en este caso)
dbPort=6432

# Usuario de la base de datos
dbUser=dev_user

# Contraseña de la base de datos
dbPassword=abc

# Nombre de la base de datos
dbName=FINANTIXV2

# Si la conexión a la DB debe usar SSL
dbSsl=false

# Tiempo máximo (ms) para establecer la conexión inicial con la DB
dbConnTimeoutMs=5000

# Tiempo máximo (ms) de inactividad antes de cerrar la conexión (lado cliente)
dbIdleTimeoutMs=30000

# Número máximo de conexiones simultáneas permitidas por el cliente
dbMaxPool=30

# Tiempo máximo (ms) permitido para ejecutar una consulta antes de ser cancelada
dbStatementTimeoutMs=30000


# ========================================
# Pool de Conexiones (para PgBouncer)
# ========================================

# Tamaño del pool de conexiones del cliente
dbPoolSize=30

# Tiempo (ms) que espera el cliente por una conexión libre antes de fallar
dbConnectionTimeout=5000

# Tiempo (ms) que una conexión inactiva en el pool del cliente puede vivir
dbIdleTimeout=30000

# Número máximo de veces que una conexión puede reutilizarse antes de ser reciclada
dbMaxUses=7500


# ========================================
# Logging
# ========================================

# Nivel de log: error | warn | info | debug
logLevel=info

# Formato de log: json | simple
logFormat=json

